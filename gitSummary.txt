使用git reflog来查看历史操作记录


第一次修改 -> git add -> 第二次修改 -> git add -> git commit



git checkout -- file.xx  可以丢弃工作区的修改：  ----->  git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令，

git checkout  其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。



---------------------------------------------------------------------------------

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

---------------------------------------------------------------------------------


---------------------------------------------------------------------------------
git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：

$ git branch dev
$ git checkout dev
Switched to branch 'dev'
然后，用git branch命令查看当前分支：

$ git branch
* dev
  master



合并完成后，就可以放心地删除dev分支了：

$ git branch -d dev
Deleted branch dev (was fec145a).
删除后，查看branch，就只剩下master分支了：

$ git branch
* master
因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在master分支上工作效果是一样的，但过程更安全。

---------------------------------------------------------------------------------